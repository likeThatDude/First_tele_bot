from datetime import datetime

from aiogram import Dispatcher, types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text

from create_bot import bot
from data_base.sqlite_db import add_user
from keyboards.start_keyboard import start_button


async def start_command(message: types.Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "/start".

    –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –±–æ—Ç—É –∫–æ–º–∞–Ω–¥—É "/start".
    –û–Ω–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ —Ñ—É–Ω–∫—Ü–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –±–æ—Ç –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        message (types.Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:
        –î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥—É–ª—å "types" –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ "aiogram",
        –∞ —Ç–∞–∫–∂–µ —Å–æ–∑–¥–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ "bot" –∏–∑ –º–æ–¥—É–ª—è "create_bot" –∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é "start_button" –∏–∑ –º–æ–¥—É–ª—è "keyboards.start_keyboard".

    –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
        –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–º–∞–Ω–¥—É "/start", –∏ –±–æ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –µ–≥–æ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π.

    """

    current_time = datetime.now().time()
    hour = current_time.hour
    await add_user(message.from_user.id, message.from_user.first_name)

    if 4 <= hour < 10:
        time_period = "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ"
    elif 10 <= hour < 17:
        time_period = "–î–æ–±—Ä—ã–π –¥–µ–Ω—å"
    elif 17 <= hour < 23:
        time_period = "–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä"
    else:
        time_period = "–î–æ–±—Ä–æ–π –Ω–æ—á—å"

    start_keyboard = await start_button()
    await bot.send_message(
        message.from_user.id,
        f"{time_period}, {message.from_user.first_name} !\n"
        f"\n–Ø –±–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫, —É –º–µ–Ω—è –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏: "
        f"\n1) –ü–æ–∏—Å–∫ –æ—Ç–µ–ª–µ–π. üè®"
        f"\n2) –ü–æ–∏—Å–∫ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤, –∫–∞—Ñ–µ.üçú"
        f"\n3) –ú–æ–≥—É —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–º –≤–∞—Å –≥–æ—Ä–æ–¥–µ.üå¶",
        reply_markup=start_keyboard,
    )


async def cancel(message: types.Message, state: FSMContext):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–º–µ–Ω—ã —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        message (types.Message): –û–±—ä–µ–∫—Ç —Å–æ–±—ã—Ç–∏—è –æ—Ç Telegram —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–æ–æ–±—â–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        state (FSMContext): –û–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ–Ω–µ—á–Ω–æ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è.

    –î–µ–π—Å—Ç–≤–∏–µ:
        –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∞–∫—Ç–∏–≤–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ (–Ω–µ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é), –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        –æ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É –¥–ª—è —ç—Ç–æ–≥–æ.
        –ó–∞–≤–µ—Ä—à–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–Ω–µ—á–Ω–æ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∞, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é).
        –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é, —É–≤–µ–¥–æ–º–ª—è–µ—Ç –µ–≥–æ –æ–± —ç—Ç–æ–º.
    """
    back_button = await start_button()
    current_state = await state.get_state()
    if current_state is None:
        await bot.send_message(
            message.from_user.id,
            "–í—ã —É–∂–µ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é."
            "\n–ü—Ä–æ—Å—Ç–æ –≤—ã–∑–æ–≤–∏—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –æ–∫–æ–ª–æ –ø–æ–ª—è –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞",
        )
    else:
        await bot.send_message(
            message.from_user.id,
            "–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            reply_markup=back_button,
        )
        await state.finish()


def register_handler_start(dp: Dispatcher):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã "/start" –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–µ.

    –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ "start_command" –¥–ª—è –∫–æ–º–∞–Ω–¥—ã "/start" –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–µ –±–æ—Ç–∞.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        dp (Dispatcher): –û–±—ä–µ–∫—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ "aiogram".

    –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:
        –§—É–Ω–∫—Ü–∏—è "start_command" –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –∏ –∏–º–µ—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç "message" —Ç–∏–ø–∞ "types.Message".
        –î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥—É–ª—å "Dispatcher" –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ "aiogram".

    –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
        –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã "/start" –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–µ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    """
    dp.register_message_handler(start_command, commands=["start"])
    dp.register_message_handler(
        cancel, Text(equals="–æ—Ç–º–µ–Ω–∞", ignore_case=True), state="*"
    )
